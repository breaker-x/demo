<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:aop="http://www.springframework.org/schema/aop" 
xmlns:task="http://www.springframework.org/schema/task"
xmlns:p="http://www.springframework.org/schema/p"
xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
http://www.springframework.org/schema/task  
http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- cservice包(自动注入) -->
	<context:component-scan base-package="com.bx.service"/>
	<!-- 引入属性文件 -->
	<context:property-placeholder location="classpath:config.properties" />
	<!-- <bean class="com.comm.util.PropertiesUtil" /> -->
	<!-- 任务扫描 -->
	<task:annotation-driven/> 
	
	<!-- Jedis ConnectionFactory 数据库连接配置-->  
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
	    <property name="hostName" value="${redis.hostname}" />  
	    <property name="port" value="${redis.port}" />  
	    <property name="password" value="${redis.password}" />  
	    <property name="poolConfig" ref="jedisPoolConfig" />  
	</bean>  
	<!-- Jedis连接池配置 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="${redis.pool.maxTotal}" />
		<property name="maxIdle" value="${redis.pool.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}" />
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
	</bean>
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis1.hostname" />
					<constructor-arg index="1" value="${redis.port}"
						type="int" />
				</bean>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis2.hostname" />
					<constructor-arg index="1" value="${redis.port}"
						type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	<!-- redisTemplate配置，redisTemplate是对Jedis的对redis操作的扩展，有更多的操作，封装使操作更便捷 --> 
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory" />  
	
	<!-- redis服务封装 -->
	<bean id="redisService" class="com.bx.common.utils.service.RedisService" />
	
	<!-- <bean id="springUtil" class="com.bx.common.utils.SpringContextUtil" />		  -->
	<!-- 操作记录管理 -->
	<!-- <bean id="operationManager" class="com.comm.manager.OperationManager" /> -->
	<!-- 编码生成 -->
	<!-- <bean id="codeInjectAspect" class="controller.barcode.interceptor.CodeInjectAspect"></bean> -->
	
	<!-- <aop:config>

		<aop:aspect id="operationAspect" ref="operationManager">
			<aop:pointcut expression="execution(* dao.base.Basedao.insert*(..))||execution(* dao.base.Basedao.update*(..))" id="opCut"/>
			<aop:before method="before" pointcut-ref="opCut"/>
		</aop:aspect>
		
		<aop:aspect id="addCodeAspect" ref="codeInjectAspect">
			<aop:pointcut expression="@annotation(controller.barcode.interceptor.Code) || execution(* dao.base.Basedao.insert*(..)) and @args(controller.barcode.interceptor.Code)" id="set_code"/>
			<aop:before method="insertCode" pointcut-ref="set_code"/>
		</aop:aspect> 
		
		<aop:aspect id="updateCodeAspect" ref="codeInjectAspect">
			<aop:pointcut expression="@annotation(controller.barcode.interceptor.Code) || execution(* dao.base.Basedao.update*(..)) and @args(controller.barcode.interceptor.Code)" id="update_code"/>
			<aop:before method="updateCode" pointcut-ref="update_code"/>
		</aop:aspect> 
	</aop:config> -->
	

</beans>